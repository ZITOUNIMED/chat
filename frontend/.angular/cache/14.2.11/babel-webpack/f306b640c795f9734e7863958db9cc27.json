{"ast":null,"code":"import { BehaviorSubject, map } from 'rxjs';\nimport { UserAcions } from '../store/states/user/actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"../services/messages.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../shared/message/message.component\";\n\nfunction HomeComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\u00A0\");\n    i0.ɵɵelementStart(4, \"em\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"hr\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const message_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r1.user == null ? null : message_r1.user.name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"at \", i0.ɵɵpipeBind2(6, 3, message_r1.timestamp, \"short\"), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(message_r1.content);\n  }\n}\n\nexport class HomeComponent {\n  constructor(store, messagesService, router) {\n    this.store = store;\n    this.messagesService = messagesService;\n    this.router = router;\n    this.last10Messages = [];\n    this.behaviorSubject$ = null;\n    this.eventSource = null;\n    this.iSubscribed = false;\n    this.user$ = this.store.select(state => state.user).pipe(map(userState => {\n      const user = {\n        username: userState.username,\n        name: userState.name,\n        uuid: userState.uuid\n      };\n      return user;\n    }));\n  }\n\n  ngOnInit() {\n    this.getLast10Messages();\n    this.subscribeUser();\n    this.watchMessagesChanges();\n  }\n\n  watchMessagesChanges() {\n    if (this.behaviorSubject$) {\n      this.behaviorSubject$.subscribe(message => {\n        if (message && message.uuid) {\n          this.last10Messages.unshift(message);\n\n          if (this.last10Messages.length > 10) {\n            this.last10Messages.pop();\n          }\n        }\n      });\n    }\n  }\n\n  subscribeUser() {\n    this.user$.subscribe(user => {\n      if (user && user.uuid && !this.iSubscribed) {\n        const emptyMessage = {\n          uuid: '',\n          content: '',\n          timestamp: 0\n        };\n        this.behaviorSubject$ = new BehaviorSubject(emptyMessage);\n        this.eventSource = this.messagesService.subscribeUser(user.uuid, this.behaviorSubject$);\n        this.iSubscribed = true;\n      } else {\n        this.iSubscribed = false;\n        this.closeExchanges();\n      }\n    });\n  }\n\n  closeExchanges() {\n    this.eventSource?.close();\n    this.eventSource = null;\n    this.behaviorSubject$?.unsubscribe();\n    this.behaviorSubject$ = null;\n  }\n\n  getLast10Messages() {\n    this.messagesService.getLast10Messages().subscribe(messages => this.last10Messages = messages);\n  }\n\n  signOut() {\n    this.iSubscribed = false;\n    this.closeExchanges();\n    this.store.dispatch(UserAcions.ResetUserAction());\n    this.store.dispatch(UserAcions.ConnectAction({\n      isConnected: false\n    }));\n    this.router.navigate(['/sign-in']);\n  }\n\n}\n\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.MessagesService), i0.ɵɵdirectiveInject(i3.Router));\n};\n\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 26,\n  vars: 7,\n  consts: [[1, \"row\"], [1, \"col-lg-2\", \"col-md-2\", \"col-12\"], [1, \"col-lg-10\", \"col-md-10\", \"col-12\"], [1, \"header\"], [\"type\", \"button\", 3, \"click\"], [3, \"uuid\"], [1, \"message-list\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h4\");\n      i0.ɵɵtext(3, \"Menu\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"ul\")(5, \"li\");\n      i0.ɵɵtext(6, \"Group 1\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"li\");\n      i0.ɵɵtext(8, \"Group 2\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"li\");\n      i0.ɵɵtext(10, \"Group 3\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"li\");\n      i0.ɵɵtext(12, \"Group 4\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"div\", 2)(14, \"div\", 3)(15, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_15_listener() {\n        return ctx.signOut();\n      });\n      i0.ɵɵtext(16, \"Sign Out\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\")(18, \"h3\");\n      i0.ɵɵtext(19);\n      i0.ɵɵpipe(20, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\");\n      i0.ɵɵelement(22, \"app-message\", 5);\n      i0.ɵɵpipe(23, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 6);\n      i0.ɵɵtemplate(25, HomeComponent_div_25_Template, 10, 6, \"div\", 7);\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      let tmp_0_0;\n      let tmp_1_0;\n      i0.ɵɵadvance(19);\n      i0.ɵɵtextInterpolate1(\"Hello \", (tmp_0_0 = i0.ɵɵpipeBind1(20, 3, ctx.user$)) == null ? null : tmp_0_0.name, \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"uuid\", (tmp_1_0 = i0.ɵɵpipeBind1(23, 5, ctx.user$)) == null ? null : tmp_1_0.uuid);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.last10Messages);\n    }\n  },\n  dependencies: [i4.NgForOf, i5.MessageComponent, i4.AsyncPipe, i4.DatePipe],\n  styles: [\".message-list[_ngcontent-%COMP%] {\\n  margin-top: 10px;\\n  height: 57vh;\\n  overflow-x: auto;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n}\\n\\nem[_ngcontent-%COMP%] {\\n  font-size: 12px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhvbWUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBQTtFQUNBLFlBQUE7RUFDQSxnQkFBQTtBQUNKOztBQUVBO0VBQ0ksaUJBQUE7QUFDSjs7QUFFQTtFQUNJLGVBQUE7QUFDSiIsImZpbGUiOiJob21lLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1lc3NhZ2UtbGlzdCB7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgaGVpZ2h0OiA1N3ZoO1xyXG4gICAgb3ZlcmZsb3cteDogYXV0bztcclxufVxyXG5cclxubGFiZWwge1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbmVtIHtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxufVxyXG4iXX0= */\"]\n});","map":{"version":3,"mappings":"AAGA,SAASA,eAAT,EAA0BC,GAA1B,QAAiD,MAAjD;AAKA,SAASC,UAAT,QAA2B,8BAA3B;;;;;;;;;;ICaQC,4BAA4C,CAA5C,EAA4C,OAA5C;IACWA;IAAsBA;IAAQA;IAAMA;IAAIA;;IAAwCA;IACvFA;IAAKA;IAAmBA;IACxBA;IACJA;;;;;IAHWA;IAAAA;IAAwCA;IAAAA;IAC1CA;IAAAA;;;;ADRjB,OAAM,MAAOC,aAAP,CAAoB;EAOxBC,YAAoBC,KAApB,EACUC,eADV,EAEUC,MAFV,EAEwB;IAFJ;IACV;IACA;IAPV,sBAA4B,EAA5B;IACA,wBAAkD,IAAlD;IACA,mBAAgC,IAAhC;IACA,mBAAuB,KAAvB;IAKE,KAAKC,KAAL,GAAa,KAAKH,KAAL,CAAWI,MAAX,CAAkBC,KAAK,IAAIA,KAAK,CAACC,IAAjC,EAAuCC,IAAvC,CACXZ,GAAG,CAACa,SAAS,IAAG;MACd,MAAMF,IAAI,GAAS;QACjBG,QAAQ,EAAED,SAAS,CAACC,QADH;QAEjBC,IAAI,EAAEF,SAAS,CAACE,IAFC;QAGjBC,IAAI,EAAEH,SAAS,CAACG;MAHC,CAAnB;MAMA,OAAOL,IAAP;IACD,CARE,CADQ,CAAb;EAWD;;EAEDM,QAAQ;IACN,KAAKC,iBAAL;IACA,KAAKC,aAAL;IACA,KAAKC,oBAAL;EACD;;EAEOA,oBAAoB;IAC1B,IAAG,KAAKC,gBAAR,EAAyB;MACvB,KAAKA,gBAAL,CAAsBC,SAAtB,CAAgCC,OAAO,IAAG;QACxC,IAAGA,OAAO,IAAIA,OAAO,CAACP,IAAtB,EAA2B;UACzB,KAAKQ,cAAL,CAAoBC,OAApB,CAA4BF,OAA5B;;UACA,IAAG,KAAKC,cAAL,CAAoBE,MAApB,GAA2B,EAA9B,EAAiC;YAC/B,KAAKF,cAAL,CAAoBG,GAApB;UACD;QACF;MACF,CAPD;IAQD;EACF;;EACOR,aAAa;IACnB,KAAKX,KAAL,CAAWc,SAAX,CAAqBX,IAAI,IAAG;MAC1B,IAAGA,IAAI,IAAIA,IAAI,CAACK,IAAb,IAAqB,CAAC,KAAKY,WAA9B,EAA0C;QACxC,MAAMC,YAAY,GAAY;UAC5Bb,IAAI,EAAE,EADsB;UAE5Bc,OAAO,EAAE,EAFmB;UAG5BC,SAAS,EAAE;QAHiB,CAA9B;QAKA,KAAKV,gBAAL,GAAwB,IAAItB,eAAJ,CAA6B8B,YAA7B,CAAxB;QACA,KAAKG,WAAL,GAAmB,KAAK1B,eAAL,CAAqBa,aAArB,CAAmCR,IAAI,CAACK,IAAxC,EAA8C,KAAKK,gBAAnD,CAAnB;QACA,KAAKO,WAAL,GAAmB,IAAnB;MACD,CATD,MASO;QACL,KAAKA,WAAL,GAAmB,KAAnB;QACA,KAAKK,cAAL;MACD;IACF,CAdD;EAeD;;EAEOA,cAAc;IACpB,KAAKD,WAAL,EAAkBE,KAAlB;IACA,KAAKF,WAAL,GAAmB,IAAnB;IACA,KAAKX,gBAAL,EAAuBc,WAAvB;IACA,KAAKd,gBAAL,GAAwB,IAAxB;EACD;;EAEOH,iBAAiB;IACvB,KAAKZ,eAAL,CAAqBY,iBAArB,GACCI,SADD,CACWc,QAAQ,IAAK,KAAKZ,cAAL,GAAsBY,QAD9C;EAED;;EAEDC,OAAO;IACL,KAAKT,WAAL,GAAmB,KAAnB;IACA,KAAKK,cAAL;IACA,KAAK5B,KAAL,CAAWiC,QAAX,CAAoBrC,UAAU,CAACsC,eAAX,EAApB;IACA,KAAKlC,KAAL,CAAWiC,QAAX,CAAoBrC,UAAU,CAACuC,aAAX,CAAyB;MAACC,WAAW,EAAE;IAAd,CAAzB,CAApB;IACA,KAAKlC,MAAL,CAAYmC,QAAZ,CAAqB,CAAC,UAAD,CAArB;EACD;;AA7EuB;;;mBAAbvC,eAAaD;AAAA;;;QAAbC;EAAawC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCf1B7C,+BAAiB,CAAjB,EAAiB,KAAjB,EAAiB,CAAjB,EAAiB,CAAjB,EAAiB,IAAjB;MAEQA;MAAIA;MACRA,2BAAI,CAAJ,EAAI,IAAJ;MACQA;MAAOA;MACXA;MAAIA;MAAOA;MACXA;MAAIA;MAAOA;MACXA;MAAIA;MAAOA;MAGlBA,gCAAwC,EAAxC,EAAwC,KAAxC,EAAwC,CAAxC,EAAwC,EAAxC,EAAwC,QAAxC,EAAwC,CAAxC;MAE6BA;QAAA,OAAS8C,aAAT;MAAkB,CAAlB;MAAoB9C;MAAQA;MAEtDA,6BAAK,EAAL,EAAK,IAAL;MACQA;;MAA6BA;MAErCA;MACIA;;MACJA;MACAA;MACIA;MAKJA;;;;;;MAXQA;MAAAA;MAGSA;MAAAA;MAGYA;MAAAA","names":["BehaviorSubject","map","UserAcions","i0","HomeComponent","constructor","store","messagesService","router","user$","select","state","user","pipe","userState","username","name","uuid","ngOnInit","getLast10Messages","subscribeUser","watchMessagesChanges","behaviorSubject$","subscribe","message","last10Messages","unshift","length","pop","iSubscribed","emptyMessage","content","timestamp","eventSource","closeExchanges","close","unsubscribe","messages","signOut","dispatch","ResetUserAction","ConnectAction","isConnected","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Utilisateur\\Desktop\\dev\\workspace5\\frontend\\src\\app\\home\\home.component.ts","C:\\Users\\Utilisateur\\Desktop\\dev\\workspace5\\frontend\\src\\app\\home\\home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { BehaviorSubject, map, Observable } from 'rxjs';\r\nimport { Message } from '../models/message.model';\r\nimport { User } from '../models/user.model';\r\nimport { MessagesService } from '../services/messages.service';\r\nimport { AppState } from '../store/states/app.state';\r\nimport { UserAcions } from '../store/states/user/actions';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  user$: Observable<User>;\r\n  last10Messages: Message[] = [];\r\n  behaviorSubject$: BehaviorSubject<Message>|null = null;\r\n  eventSource: EventSource|null = null;\r\n  iSubscribed: boolean = false;\r\n\r\n  constructor(private store: Store<AppState>,\r\n    private messagesService: MessagesService,\r\n    private router: Router) { \r\n    this.user$ = this.store.select(state => state.user).pipe(\r\n      map(userState => {\r\n        const user: User = {\r\n          username: userState.username,\r\n          name: userState.name,\r\n          uuid: userState.uuid\r\n        };\r\n\r\n        return user;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getLast10Messages();\r\n    this.subscribeUser();\r\n    this.watchMessagesChanges();\r\n  }\r\n\r\n  private watchMessagesChanges(): void {\r\n    if(this.behaviorSubject$){\r\n      this.behaviorSubject$.subscribe(message => {\r\n        if(message && message.uuid){\r\n          this.last10Messages.unshift(message);\r\n          if(this.last10Messages.length>10){\r\n            this.last10Messages.pop();\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n  private subscribeUser(): void {\r\n    this.user$.subscribe(user => {\r\n      if(user && user.uuid && !this.iSubscribed){\r\n        const emptyMessage: Message = {\r\n          uuid: '',\r\n          content: '',\r\n          timestamp: 0\r\n        };\r\n        this.behaviorSubject$ = new BehaviorSubject<Message>(emptyMessage);\r\n        this.eventSource = this.messagesService.subscribeUser(user.uuid, this.behaviorSubject$);\r\n        this.iSubscribed = true;\r\n      } else {\r\n        this.iSubscribed = false;\r\n        this.closeExchanges();\r\n      }\r\n    })\r\n  }\r\n\r\n  private closeExchanges(): void {\r\n    this.eventSource?.close();\r\n    this.eventSource = null;\r\n    this.behaviorSubject$?.unsubscribe();\r\n    this.behaviorSubject$ = null;\r\n  }\r\n\r\n  private getLast10Messages(): void {\r\n    this.messagesService.getLast10Messages()\r\n    .subscribe(messages => (this.last10Messages = messages));\r\n  }\r\n\r\n  signOut(): void {\r\n    this.iSubscribed = false;\r\n    this.closeExchanges();\r\n    this.store.dispatch(UserAcions.ResetUserAction());\r\n    this.store.dispatch(UserAcions.ConnectAction({isConnected: false}));\r\n    this.router.navigate(['/sign-in']);\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n <div class=\"col-lg-2 col-md-2 col-12\">\r\n    <h4>Menu</h4>\r\n    <ul>\r\n        <li>Group 1</li>\r\n        <li>Group 2</li>\r\n        <li>Group 3</li>\r\n        <li>Group 4</li>\r\n    </ul>\r\n </div>\r\n <div class=\"col-lg-10 col-md-10 col-12\">\r\n    <div class=\"header\">\r\n        <button type=\"button\" (click)=\"signOut()\">Sign Out</button>\r\n    </div>\r\n    <div>\r\n        <h3>Hello {{(user$|async)?.name}}</h3>\r\n    </div>\r\n    <div>\r\n        <app-message [uuid]=\"(user$|async)?.uuid\"></app-message>\r\n    </div>\r\n    <div class=\"message-list\">\r\n        <div *ngFor=\"let message of last10Messages\">\r\n            <label>{{message.user?.name}}</label>&nbsp;<em>at {{message.timestamp | date: 'short'}}</em>\r\n            <div>{{message.content}}</div>\r\n            <hr/>\r\n        </div>\r\n    </div>\r\n </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module"}